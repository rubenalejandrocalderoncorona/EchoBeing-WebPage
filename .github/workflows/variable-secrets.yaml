name: Exploring Variables and Secrets

on:
  push:

env:
    CONTAINER_REGISTRY: docker.io

    IMAGE_NAME: github-actions-nginx

# jobs:
#   docker:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker Build
#         run: docker build -t docker.io/dockerUsername/imageName:latest .

#       - name: Docker Login
#         run: docker login --username=dockerUsername --password=s3curePassword

#       - name: Docker Publish
#         run: docker push docker.io/dockerUsername/imageName:latest

#   deploy:
#     needs: docker
#     runs-on: ubuntu-latest
#     steps:
#       - name: Docker Run
#         run: docker run -d -p 8080:80 docker.io/dockerUsername/imageName:latest

####### env var at the STEP level #######
# jobs:
#     docker:
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           env:
#                 CONTAINER_REGISTRY: docker.io
#                 DOCKER_USERNAME: siddharth1
#                 IMAGE_NAME: github-actions-nginx
#           run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest .

#         - name: Docker Login
#           env:
#             DOCKER_PASSWORD: s3curePassw0rd
#             DOCKER_USERNAME: siddharth1
#           run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#         - name: Docker Publish
#           env:
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: siddharth1
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#     deploy:
#         needs: docker   
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Run
#           env: 
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: siddharth1
#             IMAGE_NAME: github-actions-nginx
#           run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest


### env var at the job level ###
# jobs:
#     docker:
#         env:
#                 CONTAINER_REGISTRY: docker.io
#                 DOCKER_USERNAME: siddharth1
#                 IMAGE_NAME: github-actions-nginx
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Build
#           run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest .

#         - name: Docker Login
#           run: echo docker login --username=$DOCKER_USERNAME --password=$DOCKER_PASSWORD

#         - name: Docker Publish
#           run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

#     deploy:
#         env: 
#             CONTAINER_REGISTRY: docker.io
#             DOCKER_USERNAME: siddharth1
#             IMAGE_NAME: github-actions-nginx
#         needs: docker   
#         runs-on: ubuntu-latest
#         steps:
#         - name: Docker Run
#           run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

### env var at the workflow ###


jobs:
    docker:
        runs-on: ubuntu-latest
        steps:
        - name: Docker Build
          run: echo docker build -t $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest .

        - name: Docker Login
          run: echo docker login --username=$DOCKER_USERNAME --password=${{ secrets.DOCKER_PASSWORD }}

        - name: Docker Publish
          run: echo docker push $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest

    deploy:
        needs: docker   
        runs-on: ubuntu-latest
        steps:
        - name: Docker Run
          run: echo docker run -d -p 8080:80 $CONTAINER_REGISTRY/$DOCKER_USERNAME/$IMAGE_NAME:latest